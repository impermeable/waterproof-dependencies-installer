# This is a basic workflow to help you get started with Actions

name: Ubuntu

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

###############################################################################
# Platform script options shared among all jobs
###############################################################################
env:
  COQREGTESTING: y

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Ubuntu_platform:
    name: Ubuntu
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
          
      - name: Git checkout install scripts
        uses: actions/checkout@v2
        with:
          path: main
          
      - name: Git checkout Coq platform
        uses: actions/checkout@v2
        with:
          repository: coq/platform
          path: platform

      - name: Set switch name in coq platform
        shell: bash
        # We need to output without a (windows style new line here) else bash will complain AND we rely on the fact that the file has a trailing new line.
        run: |
          pwd
          echo COQ_PLATFORM_SWITCH_NAME=coq_for_waterproof >> platform/package_picks/coq_platform_switch_name.sh
          cat platform/package_picks/coq_platform_switch_name.sh

      - name: Install bubblewrap and build-essential (and curl?)
        run: |
          pwd
          sudo apt-get update -y
          sudo apt-get install bubblewrap build-essential -y
          sudo apt install curl -y

      - name: Run coq platform make
        shell: bash
        run: |
          pwd
          cd platform
          chmod +x coq_platform_make.sh
          ./coq_platform_make.sh -extent=b -parallel=p -jobs=2 -vst=n -compcert=n -pick="8.14~2022.01"
          cd ..
          
      - name: Install packages specified in cfg file
#         shell: cmd
        run: |
          cp -r main/. platform
          mkdir -p platform/test_files/
          cp -r main/test_files/. platform/test_files
          cd platform
          chmod +x install_packages.sh
          ./install_packages.sh packages.cfg
          cd ..

# This seems to be only for windows so idk
      - name: Patch SerAPI
#         shell: cmd
        run: |
          cp main/patch_serapi.sh .
          chmod +x patch_serapi.sh
          ./patch_serapi.sh
         
# TODO the thing below makes no sense of course
      - name: Create installer
#         shell: cmd
        run: |
          cd platform
          ./linux/create_linux_installer.sh
          mkdir /cygdrive/c/installer
          cp linux_installer/*.exe /cygdrive/c/installer/"

      - name: Run test file
#         shell: cmd
        run: |
          cd platform/
          chmod +x test.sh
          ./test.sh

      - name: 'Upload Artifact'
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: 'Ubuntu installer'
          path: platform/linux_installer/*.exe
          retention-days: 5
          
