# Main doc: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/introduction-to-github-actions
# Runners spec: https://docs.github.com/en/free-pro-team@latest/actions/reference/specifications-for-github-hosted-runners
# Glob expressions: https://github.com/actions/toolkit/tree/main/packages/glob

name: MacOS

###############################################################################
# Schedule:
# Push on main branch
###############################################################################
on:
  push:
    branches:
      - 8.17-macos
  pull_request:
  workflow_dispatch:

###############################################################################
# Platform script options shared among all jobs
###############################################################################
env:
  COQREGTESTING: y

###############################################################################
# Builds Windows installer
###############################################################################
jobs:
  MacOS_platform:
    name: MacOS
    runs-on: macos-latest
    strategy:
      fail-fast: false

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Git checkout install scripts
        uses: actions/checkout@v2
        with:
          path: main
          ref: 8.17-macos

      - name: Git checkout Coq platform
        uses: actions/checkout@v2
        with:
          repository: coq/platform
          ref: '2023.03.0'
          path: platform

      - name: Check installer directory
        if: always()
        shell: bash
        run: |
          echo Platform
          cd platform
          ls

      - name: Update XCode installation
        if: always()
        shell: bash
        run: |
          sudo rm -rf /Library/Developer/CommandLineTools
          xcode-select --install

      # Another fix suggested by platform, pkg-config may not be registering new libraries
      - name: Uninstall all brew packages to fix pkg-config
        if: always()
        shell: bash
        run: brew uninstall $(brew list)

      # Updated bash is necessary for the platform create_installer script.
      - name: Install Bash 4 and GNU sed on Mac
        if: always()
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          brew update
      
          brew install bash
          brew install gnu-sed
      
          echo "/usr/local/bin" >> $GITHUB_PATH
          echo "$(brew --prefix)/opt/gnu-sed/libexec/gnubin" >> $GITHUB_PATH
          echo "/usr/local/bin/bash" >> $GITHUB_PATH

      # - name: Set switch name in coq platform
      #   if: always()
      #   shell: bash
      #   run: |
      #     sed -i '$a\COQ_PLATFORM_SWITCH_NAME=wp' platform/package_picks/coq_platform_switch_name.sh
      #     cat platform/package_picks/coq_platform_switch_name.sh

      - name: Missing dependency
        if: always()
        shell: bash
        run: | 
          sed -i '/^### GTK sourceview.*/i add_folder_recursively \"/Users/runner/.opam/CP.2023.03.0~8.17~2023.08/\" \"lib/sexplib0\"' platform/macos/create_installer_macos.sh
          cat platform/macos/create_installer_macos.sh

      - name: Run coq platform make script
        if: always()
        shell: bash
        run: |
          sh platform/coq_platform_make.sh -parallel=p -jobs=2 -compcert=n -extent=i -pick="8.17~2023.08" -set-switch=y

      - name: Activate switch
        if: always()
        shell: bash
        run: |
          opam switch CP.2023.03.0~8.17~2023.08
          eval $(opam env)
          opam switch show
      
      - name: Install packages for installer script
        if: always()
        shell: bash
        run: |
          pip3 install macpack
          brew install findutils
          brew install coreutils

      - name: Update PATH variable
        if: always()
        shell: bash
        run: echo "/Users/runner/.opam" >> $GITHUB_PATH

      - name: Install coq-serapi
        if: always()
        shell: bash
        run: opam install -y coq-serapi.8.17.0+0.17.0

      - name: Install coq-lsp
        if: always()
        shell: bash
        run: opam install -y coq-lsp.0.1.7+8.17

      - name: Install coq-waterproof
        if: always()
        shell: bash
        run: opam install -y coq-waterproof.2.0.1+8.17
      
      # Create installer with no additional packages for now just as a test
      - name: Create installer
        if: always()
        shell: bash
        run: |
          cd platform
          bash macos/create_installer_macos.sh

      # How does signing the installer work now? -sign and -signcert are options for the create installer script

      # - name: Sign the installer
      #   run: |
      #     New-Item -ItemType directory -Path certificate
      #     Set-Content -Path certificate\certificate.txt -Value '${{ secrets.CODE_SIGNING_CERTIFICATE }}'
      #     certutil -decode certificate\certificate.txt certificate\certificate.pfx
      #     & 'C:/Program Files (x86)/Windows Kits/10/bin/10.0.17763.0/x86/signtool.exe' sign /f certificate\certificate.pfx /p '${{ secrets.CODE_SIGNING_CERTIFICATE_PASS }}' C:\installer\*.exe
      #     Remove-Item -Path certificate\*

      - name: 'Upload Artifact'
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: 'MacOS DMG Installer'
          path: platform/macos_installer/*.dmg
          retention-days: 5
