# This workflow runs after the 'Windows' workflow completes and tests the installer
name: Test Installer After Build

on:
  workflow_dispatch:
    inputs:
      run_id:
        description: 'Workflow run ID to download artifact from'
        required: true
        type: string

jobs:
  test_installer:
    runs-on: windows-latest
    steps:
      - name: Download Installer Artifact
        uses: actions/download-artifact@v4
        with:
          name: 'Windows installer 64 bits'
          github-token: ${{ secrets.READ_ACCESS_FOR_ARTIFACTS }}
          path: installer
          run-id: ${{ github.event.inputs.run_id }}

      - name: Find Installer
        run: |
          dir installer
          $installerExe = Get-ChildItem installer\*.exe | Select-Object -First 1
          echo "Installer found: $installerExe"
        shell: pwsh

      - name: Run Installer Silently
        run: |
          $installerExe = Get-ChildItem installer\*.exe | Select-Object -First 1
          Start-Process -FilePath $installerExe.FullName -ArgumentList "/S" -Wait
        shell: pwsh

      - name: Check Installed Programs Running
        run: |
          # Example: check if 'coq-lsp.exe' is running
          ls
          ls C:\
          C:\waterproof_dependencies\opam\wp-3.0.0+9.0\bin\coq-lsp.exe --version
        shell: pwsh

      - name: Remove dll
        run: |
          ls C:\waterproof_dependencies\opam\wp-3.0.0+9.0\bin
          Remove-Item -Path "C:\waterproof_dependencies\opam\wp-3.0.0+9.0\bin\libgmp-10.dll"
        shell: pwsh

      - name: Search for libgmp-10.dll on C drive
        run: |
          Write-Host "Searching for libgmp-10.dll on C:\"
          $dlls = Get-ChildItem -Path C:\ -Filter libgmp-10.dll -Recurse -ErrorAction SilentlyContinue
          if ($dlls) {
            Write-Host "Found libgmp-10.dll at:"
            $dlls | ForEach-Object { Write-Host $_.FullName }
          } else {
            Write-Host "libgmp-10.dll not found on C drive."
          }
        shell: pwsh

      - name: Check coq-lsp fails
        run: |
          & "C:\waterproof_dependencies\opam\wp-3.0.0+9.0\bin\coq-lsp.exe" --version
          if ($LASTEXITCODE -eq 0) {
            Write-Error "coq-lsp ran successfully, but it was expected to fail."
          } else {
            Write-Host "coq-lsp failed as expected."
          }
        shell: pwsh
